Q) What are dunder methods ? Why do we need them?
A)If we want to print the data other than the memory block, we have to use dunder methods.
  Dunder methods are known as Magoc methods or Special methods or Double Underscore methods.
  Using these, we can create a relationship between object and inbuilt methods like print(), len(), add(), eq(), int(), float(), str(), etc..
  We can decide what needs to be printed.

 Ex:
 class vehicle :
	def __init__(self,selfdriven,autogear,adsystem) :
		self.selfdriven = selfdriven
		self.autogear = autogear
		self.adsystem = adsystem
	def __str__(self):
		return f"{self.selfdriven}, {self.autogear}, {self.adsystem}"
nissan = vehicle(False,"yes","yes")
print(nissan)


o/p:- False,yes,yes



-----------------------------------

Q) What is super() method ?
A) super() method provides the flexibility to add extra attributes to the constructor than its before class attributes, after inheritance.
   We can add the extra functionality in methods too.

  Ex:
  class college :
	def __init__(self,student_id,student_name,student_class) :
		self.student_id = student_id
		self.student_name = student_name
		self.student_class = student_class
	def orientation(self) :
		return "This is about academic orientation"
 class playground(college) :
	def __init__(self,student_id,student_name,student_class,student_game) :
		super().__init__(student_id,student_name,student_class)
		self.student_game = student_game
	def orientation(self) :
		return super().orientation()  + "and physical education orientation"
rama = college(1,"Rama",8)
rama_playground = playground(1,"Rama",8,"TT")
seetha = playground(2,"seetha",8,"TT")
print(rama_playground.student_game)
print(rama_playground.student_name)
print(seetha.student_game)
print(seetha.orientation())


o/p: TT
     Rama
     TT
     This is about academic orientation and physical education orientation.